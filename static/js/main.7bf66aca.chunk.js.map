{"version":3,"sources":["logo.svg","components/navbar/navbar.js","components/construction/UnderConstruction.js","components/medicine/AddItemBox.js","components/medicine/ItemOptions.js","components/medicine/Item.js","components/medicine/ItemsList.js","components/medicine/TodoStats.js","components/medicine/Medicine.js","components/resources/Resources.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","tabs","paths","NavBar","useState","indexOf","window","location","hash","substring","tab","setTab","links","history","useHistory","useEffect","listen","i","length","push","className","to","style","borderBottom","id","src","alt","UnderConstruction","AddItemBox","type","placeholder","onKeyPress","this","onInputEnter","bind","e","key","item","target","value","props","addNewItem","Component","ItemOptions","onClick","todoList","found","splice","updateList","Item","name","task","listClass","completed","currentTask","completeTask","list","ItemsList","todos","items","listItem","map","TodoStats","finished","percent","Medicine","state","percentDone","done","updateListAfterDeletion","addItem","class","textAlign","setState","countFinishedTasks","listItems","localStorage","setItem","updateFromLocalStorage","percentCompletion","JSON","stringify","totalTasks","finishedTasks","Math","floor","isNaN","defaultProps","Resources","expanded","hover","longText","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","variant","Link","eventKey","Content","Pane","Card","Body","Title","Subtitle","Text","Img","CardColumns","title","Footer","bg","text","Carousel","Caption","App","getItem","val","parse","path","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7bf66aca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {useState, useEffect} from 'react';\r\nimport './navbar.css';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nconst tabs = ['Homepage', 'Treatment', 'Resources', 'Medicine', 'Profile'];\r\nconst paths = ['/', '/treatment', '/resources', '/medicine', '/profile'];\r\nconst leftLogo = \"https://2019.igem.org/wiki/images/3/32/T--Washington--HLogo2.png\";\r\nconst rightLogo = \"https://2019.igem.org/wiki/images/3/32/T--Washington--HLogo2.png\";\r\n\r\nconst NavBar = () => {\r\n\tconst [tab, setTab] = useState(paths.indexOf(window.location.hash.substring(1)));\r\n\tlet links = [];\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\treturn history.listen(() => { \r\n\t\t\tsetTab(paths.indexOf(window.location.hash.substring(1)));\r\n\t\t}) \r\n\t}, [history]);\r\n\r\n\tfor (let i = 0; i < tabs.length; i++) {\r\n\t\tlinks.push(\r\n\t\t<Link\r\n\t\t\tclassName='nav-tab'\r\n\t\t\tto={paths[i]}\r\n\t\t\tstyle={{borderBottom: tab === i ? '0.75vw solid #4B2E83' : 'none'}}\r\n\t\t>\r\n\t\t\t{tabs[i]}\r\n\t\t</Link>)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div id='nav-bar-container'>\r\n\t\t\t<img id='logo-left' className='logo' src={leftLogo} alt='Logo'/>\r\n\t\t\t{links}\r\n\t\t\t<img id='logo-right' className='logo' src={rightLogo} alt='Logo'/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst UnderConstruction = () => {\r\n  return (\r\n    <h1>Page under construction.</h1>\r\n  );\r\n}\r\n\r\nexport default UnderConstruction;","// Packages\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// CSS\r\nimport './Medicine.css';\r\n\r\nclass AddItemBox extends Component {\r\n    render() {\r\n        // We use bind(this) to bind the function within this component\r\n        return (\r\n            <div className='AddItemBox'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Add a task...'\r\n                    onKeyPress={this.onInputEnter.bind(this)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onInputEnter(e) {\r\n        if (e.key === 'Enter') {\r\n            let item = e.target.value;\r\n            // Now add it to the 'items' array state\r\n            this.props.addNewItem(item);\r\n            // On enter, remove the value from the input\r\n            e.target.value = '';\r\n        }\r\n    }\r\n}\r\n\r\nAddItemBox.propTypes = {\r\n    addNewItem: PropTypes.func\r\n}\r\n\r\nexport default AddItemBox;\r\n","// Packages\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Styles\r\nimport './Medicine.css';\r\n\r\nconst ItemOptions = (props) => {\r\n    const removeItem = (e) => {\r\n        let todoList = props.todoList,\r\n            i = 0,\r\n            found = false;\r\n        // Remove this todo from the array\r\n        while (i < todoList.length && !found) {\r\n            if (props.item === todoList[i]) {\r\n              todoList.splice(i, 1); // remove that item from array\r\n              found = true;\r\n            } else {\r\n              i++;\r\n            }\r\n        }\r\n        // Then call the update local storage method\r\n        props.updateList(todoList);\r\n    };\r\n\r\n    // Return\r\n    return (\r\n        <div className=\"TaskOptions\">\r\n            <button onClick={removeItem}>\r\n                <span className=\"fa fa-trash\"></span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nItemOptions.propTypes = {\r\n  item: PropTypes.object,\r\n  completeTask: PropTypes.func,\r\n  updateList: PropTypes.func\r\n}\r\n\r\nexport default ItemOptions;\r\n","// Packages\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components and Styles\r\nimport ItemOptions from './ItemOptions';\r\nimport './Medicine.css';\r\n\r\nconst Item = (props) => {\r\n    // Marks x task as done\r\n    const markDone = () => {\r\n        let currentTask = props.item;\r\n        props.completeTask(currentTask);\r\n    };\r\n\r\n    // Cache Values\r\n    let name = props.item.task,\r\n        completed = props.item.completed,\r\n        listClass = (completed) ? 'done' : '';\r\n\r\n    // return\r\n    return (\r\n        <li className={listClass}>\r\n            <div className=\"ItemDiv\" onClick={markDone}>\r\n                <p>{name}</p>\r\n            </div>\r\n            <ItemOptions\r\n                item={props.item}\r\n                todoList={props.list}\r\n                updateList={props.updateList}\r\n            />\r\n        </li>\r\n    );\r\n};\r\n\r\nItem.propTypes = {\r\n    list: PropTypes.array,\r\n    item: PropTypes.object,\r\n    completeTask: PropTypes.func,\r\n    updateList: PropTypes.func\r\n}\r\n\r\nexport default Item;\r\n","// Packages\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components and Styles\r\nimport Item from './Item';\r\nimport './Medicine.css';\r\n\r\nconst ItemsList = (props) => {\r\n    let todos = props.items;\r\n    const listItem = todos.map((item) => {\r\n        return (\r\n            <Item\r\n                item={item}\r\n                key={todos.indexOf(item)}\r\n                list={todos}\r\n                completeTask={props.completeTask}\r\n                updateList={props.updateList}\r\n            />\r\n        );\r\n    });\r\n    return (\r\n        <div className=\"ItemsList\">\r\n            <ul>\r\n                {listItem}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nItemsList.propTypes = {\r\n  items: PropTypes.array,\r\n  completeTask: PropTypes.func,\r\n  updateList: PropTypes.func\r\n}\r\n\r\nexport default ItemsList;\r\n","// Packages\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Styles\r\nimport './Medicine.css';\r\n\r\nconst TodoStats = (props) => {\r\n    const congrats = (percent) => {\r\n        return (\r\n            percent === 100 ? \r\n            <div>Amazing!</div> : null \r\n        );\r\n    }; \r\n\r\n  return (\r\n    <div className=\"TodoStats\">\r\n      <p className=\"stats\"><span>{props.list.length}</span> Medicines</p>\r\n      <p className=\"stats\"><span>{props.finished}</span> Have Taken</p>\r\n      <p className=\"stats-percent\"><span>{props.percent}%</span> Done</p>\r\n      {congrats(props.percent)}\r\n    </div>\r\n  );\r\n};\r\n\r\nTodoStats.propTypes = {\r\n    list: PropTypes.array,\r\n    finished: PropTypes.number,\r\n    percent: PropTypes.number\r\n}\r\n\r\nexport default TodoStats;\r\n","// Packages\r\nimport React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Components\r\nimport AddItemBox from './AddItemBox';\r\nimport ItemsList from './ItemsList';\r\nimport TodoStats from './TodoStats';\r\nimport './Medicine.css';\r\n\r\n// 7:30am on June 13\r\n\r\n/*\r\n * HOW IT WORKS\r\n * 1. Types in the input box\r\n * 2. User presses Enter\r\n * 3. At 'ENTER', grab the input value\r\n * 4. Push it to the App \"items\" state array\r\n * 5. Re-render the ItemList component\r\n * 6. User can see the change\r\n * Use binds the addItem event so it changes the state in this comp\r\n */\r\n\r\nclass Medicine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todoList: props.todos || [],\r\n            finished: props.finished || 0,\r\n            percentDone: props.done || 0\r\n        };\r\n        this.completeTask = this.completeTask.bind(this);\r\n        this.updateListAfterDeletion = this.updateListAfterDeletion.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n    }\r\n\r\n    render() {\r\n        let todoList = this.state.todoList;\r\n        return (\r\n            <div className=\"Medicine\">\r\n                <h2 class=\"m-5\" style={{\r\n                    textAlign: 'center'\r\n                }}>Medicine List</h2>\r\n                <TodoStats\r\n                    list={todoList}\r\n                    finished={this.state.finished}\r\n                    percent={this.state.percentDone}\r\n                />\r\n                <AddItemBox addNewItem={this.addItem}/>\r\n                <ItemsList\r\n                    items={todoList}\r\n                    completeTask={this.completeTask}\r\n                    updateList={this.updateListAfterDeletion}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Adds item to app's 'items' state\r\n    addItem(item) {\r\n        let todoList = this.state.todoList,\r\n            task = {task: item, completed: false};\r\n        todoList.push(task);\r\n        this.setState({todoList}, () => {\r\n            this.countFinishedTasks();\r\n        });\r\n    }\r\n\r\n    // Marks a task as completed\r\n    completeTask(task) {\r\n        let listItems = this.state.todoList;\r\n        for (let i = 0; i < listItems.length; i++) {\r\n            if (listItems[i] === task) {\r\n                listItems[i].completed = !listItems[i].completed;\r\n                this.countFinishedTasks();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Counts Completed tasks and updates state and localstorage object\r\n    countFinishedTasks() {\r\n        let listItems = this.state.todoList;\r\n        let finished = 0;\r\n        for (let i = 0; i < listItems.length; i++) {\r\n            if (listItems[i].completed) {\r\n                finished++;\r\n            }\r\n        }\r\n        this.setState({ finished }, () => {\r\n            localStorage.setItem('finished', finished);\r\n            this.updateFromLocalStorage();\r\n            this.percentCompletion();\r\n        });\r\n    }\r\n\r\n    // Stores todoList in localStorage object\r\n    updateFromLocalStorage() {\r\n        localStorage.setItem('todos', JSON.stringify(this.state.todoList));\r\n    }\r\n\r\n    // Calculates % of completed tasks\r\n    percentCompletion() {\r\n        let totalTasks = this.state.todoList.length,\r\n            finishedTasks = this.state.finished,\r\n            percentDone = Math.floor((finishedTasks / totalTasks) * 100);\r\n        percentDone = isNaN(percentDone) ? 0 : percentDone;\r\n        this.setState({percentDone}, () => {\r\n            localStorage.setItem('done', percentDone);\r\n        });\r\n    }\r\n\r\n    // Updates list after deletion of a task\r\n    updateListAfterDeletion(todoList) {\r\n        this.setState({todoList}, () => {\r\n            this.countFinishedTasks();\r\n        });\r\n    }\r\n}\r\n\r\nMedicine.propTypes = {\r\n  todos: PropTypes.array,\r\n  finished: PropTypes.number,\r\n  percent: PropTypes.number\r\n}\r\n\r\nMedicine.defaultProps = {\r\n  todos: [],\r\n  finished: 0,\r\n  percent: 0\r\n}\r\n\r\nexport default Medicine;\r\n","import React, {useState} from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport CardColumns from 'react-bootstrap/CardColumns'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nconst Resources = (props) => {\r\n\r\n    const [effect, setEffect] = useState({\r\n        expanded: false,\r\n        hover: false\r\n    });\r\n\r\n    const longText = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\n\r\n    const quotes = () => {\r\n        return (\r\n        <div>\r\n            <CardColumns>\r\n            <Card>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n                <Card.Body>\r\n                <Card.Title>Card title that wraps to a new line</Card.Title>\r\n                <Card.Text>\r\n                    This is a longer card with supporting text below as a natural lead-in to\r\n                    additional content. This content is a little bit longer.\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card className=\"p-3\">\r\n                <blockquote className=\"blockquote mb-0 card-body\">\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n                    erat a ante.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                    <small className=\"text-muted\">\r\n                    Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                    </small>\r\n                </footer>\r\n                </blockquote>\r\n            </Card>\r\n            <Card>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n                <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                    This card has supporting text below as a natural lead-in to additional\r\n                    content.{' '}\r\n                </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Card bg=\"primary\" text=\"white\" className=\"text-center p-3\">\r\n                <blockquote className=\"blockquote mb-0 card-body\">\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n                    erat a ante.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                    <small className=\"text-muted\">\r\n                    Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                    </small>\r\n                </footer>\r\n                </blockquote>\r\n            </Card>\r\n            <Card className=\"text-center\">\r\n                <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                    This card has supporting text below as a natural lead-in to additional\r\n                    content.{' '}\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <Card>\r\n                <Card.Img src=\"holder.js/100px160\" />\r\n            </Card>\r\n            <Card className=\"text-right\">\r\n                <blockquote className=\"blockquote mb-0 card-body\">\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n                    erat a ante.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                    <small className=\"text-muted\">\r\n                    Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                    </small>\r\n                </footer>\r\n                </blockquote>\r\n            </Card>\r\n            <Card>\r\n                <Card.Body>\r\n                <Card.Title>Card title</Card.Title>\r\n                <Card.Text>\r\n                    This is a wider card with supporting text below as a natural lead-in to\r\n                    additional content. This card has even longer content than the first to\r\n                    show that equal height action.\r\n                </Card.Text>\r\n                <Card.Text>\r\n                    <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n                </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            </CardColumns>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    const images = [\r\n        {\r\n          original: 'https://placekitten.com/600/300',\r\n          thumbnail: 'https://placekitten.com/600/300',\r\n        },\r\n        {\r\n          original: 'http://lorempixel.com/1000/600/nature/2/',\r\n          thumbnail: 'http://lorempixel.com/250/150/nature/2/'\r\n        },\r\n        {\r\n          original: 'http://lorempixel.com/1000/600/nature/3/',\r\n          thumbnail: 'http://lorempixel.com/250/150/nature/3/'\r\n        }\r\n    ];\r\n\r\n    const gallery = (images) => {\r\n        return (\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"https://placekitten.com/600/300\"\r\n                    alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                    <h3>First slide label</h3>\r\n                    <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"https://placekitten.com/600/300\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n\r\n                    <Carousel.Caption>\r\n                    <h3>Second slide label</h3>\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                    className=\"d-block w-100\"\r\n                    src=\"https://placekitten.com/600/300\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n\r\n                    <Carousel.Caption>\r\n                    <h3>Third slide label</h3>\r\n                    <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n          );\r\n    }\r\n\r\n    return <>\r\n        <h2 class=\"m-5\" style={{\r\n            textAlign: 'center'\r\n        }}>Resources</h2>\r\n        <div class=\"m-5\">\r\n            <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n                <Row>\r\n                    <Col sm={3}>\r\n                    <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item>\r\n                        <Nav.Link eventKey=\"first\">Tab 1</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                        <Nav.Link eventKey=\"second\">Tab 2</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                        <Nav.Link eventKey=\"third\">Tab 3</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                        <Nav.Link eventKey=\"forth\">Tab 4</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    </Col>\r\n                    <Col sm={9}>\r\n                    <Tab.Content>\r\n                        <Tab.Pane eventKey=\"first\">\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title>Card Title</Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                                <Card.Text>\r\n                                    {longText}\r\n                                    {longText}\r\n                                </Card.Text>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                                <Card.Text>\r\n                                    {longText}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\">\r\n                            <Card>\r\n                                <Card.Body>\r\n                                    <Card.Title>Card Title</Card.Title>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                                    <Card.Text>\r\n                                        {longText}\r\n                                        {longText}\r\n                                    </Card.Text>\r\n                                    <Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>\r\n                                    <Card.Text>\r\n                                        {longText}\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                                <Card.Img variant=\"top\" src=\"https://placekitten.com/600/300\" />\r\n                            </Card>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"third\">\r\n                            {quotes()}\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"forth\">\r\n                            {gallery(images)}\r\n                        </Tab.Pane>\r\n                    </Tab.Content>\r\n                    </Col>\r\n                </Row>\r\n            </Tab.Container>\r\n        </div>\r\n    </>;\r\n}\r\n\r\nexport default Resources;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  Route,\n  Switch,\n  HashRouter\n} from 'react-router-dom';\n\nimport NavBar from './components/navbar/navbar';\nimport UnderConstruction from './components/construction/UnderConstruction';\nimport Medicine from './components/medicine/Medicine';\nimport Resources from './components/resources/Resources'\n\nfunction App() {\n  let getItem = (val) => {\n    return JSON.parse(localStorage.getItem(val));\n  };\n\n  const props = {\n    todos: getItem('todos'),\n    finished: getItem('finished'),\n    done: getItem('done')\n  };\n\n  return (\n    <HashRouter>\n      <NavBar />\n      <Switch>\n        <Route path='/' exact><UnderConstruction /></Route>\n        <Route path='/treatment' exact><UnderConstruction /></Route>\n        <Route path='/resources' exact><Resources /></Route>\n        <Route path='/medicine' exact><Medicine {...props}/></Route>\n        <Route path='/profile' exact><UnderConstruction /></Route>\n      </Switch>\n    </HashRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}